<?xml version='1.0' ?>
<!--
	This example is a Timed MoC system example with feedback.
	There is one global input (HiGabor) and one global output
	(ByeGabor).  HiGabor is zipped together with the ouput of 
	an Init process.  The zipped signal is input into a Mealy 
	Process.  The Mealy process outputs to the global output
	and to the Init process through a Splitter process.
	-->
<system>
	<inputs>
		<HiGabor>
		0,1,Absent,2,3,Absent,Absent,4,-5,6,Absent,7,8,9,0,1,Absent,23,5.56,123,Absent,4,6
		</HiGabor>
	</inputs>
	<outputs>
		<ByeGabor>
		</ByeGabor>
	</outputs>
	<processes>
		<processZip>
			<MoC>
				Timed
			</MoC>
			<Type>
				Zip
			</Type>
			<Count1>
				1
			</Count1>
			<Count2>
				1
			</Count2>
			<In1>
				inputs/HiGabor
			</In1>
			<In2>
				processInit/Out1
			</In2>
			<Out1>
			</Out1>
		</processZip>
		<processMealy>
			<MoC>
				Timed
			</MoC>
			<Type>
				Mealy
			</Type>
			<PartFunc>
				return 1
			</PartFunc>
			<!-- 
				The Output function:
				Returns the first input added with the 
				current state, if the input is not
				an absent event.  Otherwise it returns 
				the current state.
			-->
			<OutFunc>
if x[0][0][0]!=None:
  return [(x[0][0][0] + w)]
else:
  return [(w)]
			</OutFunc>
			<!-- 
				The Next State function:
				Returns the second input, if the input is not
				an absent event.  Otherwise it returns 0.
			-->
			<StateFunc>
if x[0][1][0]!=None:
  return x[0][1][0]
else:
  return 0
			</StateFunc>
			<InitialState>
				1
			</InitialState>
			<In1>
				processZip/Out1
			</In1>
			<Out1>
			</Out1>
		</processMealy>
		<processInit>
			<MoC>
				Timed
			</MoC>
			<Type>
				Init
			</Type>
			<InitValue>
				1
			</InitValue>
			<In1>
				processSplitter/Out2
			</In1>
			<Out1>
			</Out1>
		</processInit>
		<processSplitter>
			<type>
				Splitter
			</type>
			<In1>
				processMealy/Out1
			</In1>
			<Out1>
				outputs/ByeGabor
			</Out1>
			<Out2>
			</Out2>
		</processSplitter>
	</processes>
</system>